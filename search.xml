<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何搭建博客</title>
    <url>/2022/09/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="如何搭建博客"><a href="#如何搭建博客" class="headerlink" title="如何搭建博客?"></a>如何搭建博客?</h2><hr>
<p>具体如何搭建博客我就不啰嗦了<br>参考视频：<a href="https://www.bilibili.com/video/BV1Yb411a7ty/?spm_id_from=333.337.search-card.all.click">视频链接</a></p>
<p>搭建完后可以下载不同的博客主题<br>我个人使用的是 yilia和butterfly 大家可以任选其一，当然也可以去查找不一样的主题</p>
<p>推荐文档教程： <a href="https://butterfly.js.org/">butterfly主题链接</a></p>
<p>详细教程文档可以百度，教程也比较详细</p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>20岁</title>
    <url>/2022/10/08/20%E5%B2%81/</url>
    <content><![CDATA[<h2 id="关于生日"><a href="#关于生日" class="headerlink" title="关于生日"></a>关于生日</h2><p>今天十月八号了，前几天放国庆在家休息了几天、顺<br>便过了自己的二十岁生日，口罩的原因，只是喊上几<br>个亲朋好友在家吃了顿饭，想想也有点感慨，自己怎<br>么就二十岁了,都说十八岁后人生就像按了加速键,好<br>像也确实如此.明年这个时候我也应该在公司上班了.<br>还是希望自己能更加自律吧，自己约束自己, 加油.</p>
<pre><code>&gt; 跑步是个好习惯，继续坚持
&gt; 健身也不能少，坚持
&gt; 身体是革命的本钱
</code></pre>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM总结</title>
    <url>/2022/10/10/SSM/</url>
    <content><![CDATA[<h1 id="关于SSM的相关总结"><a href="#关于SSM的相关总结" class="headerlink" title="关于SSM的相关总结"></a>关于SSM的相关总结</h1><hr>
<h5 id="准备通过这篇文章来总结一下SSM框架-也算是复习总结一下"><a href="#准备通过这篇文章来总结一下SSM框架-也算是复习总结一下" class="headerlink" title="准备通过这篇文章来总结一下SSM框架,也算是复习总结一下"></a>准备通过这篇文章来总结一下SSM框架,也算是复习总结一下</h5><p>SSM框架就是 Spring + SpringMVC + MyBatis</p>
<h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a><strong>Spring</strong></h3><h4 id="1-Spring是什么？"><a href="#1-Spring是什么？" class="headerlink" title="1.Spring是什么？"></a>1.Spring是什么？</h4><ul>
<li><p>是一个轻量级的开源框架，是为解决企业应用开发的复杂性而创建的</p>
</li>
<li><p>是一个三层架构</p>
<pre><code>   Web层：Spring MVC；

   业务层 ：Spring的IoC；

   持久层 ：Spring的JDBC、ORM、等持久层框架；
</code></pre>
</li>
<li><p>Spring的核心：控制反转(IoC)和面向切面编程(AOP)；</p>
<pre><code>   IoC（Inverse of Control，控制反转）:
   指的是将对象的创建权交给 Spring 去创建。 使用 Spring 之前，
   对象的创建都是由我们使用 new 创建，而使用 Spring 之后，对象的
   创建都交给了 Spring 框架。

   AOP（Aspect Oriented Programming，面向切面编程）:
   AOP 用来封装多个类的公共行为，将那些与业务无关，
   却为业务模块所共同调用的逻辑封装起来，减少系统的重复
   代码，降低模块间的耦合度。另外，AOP还解决一些系统层
   面上的问题，比如日志、事务、权限等。
</code></pre>
</li>
</ul>
<h4 id="2-Spring是干什么的？"><a href="#2-Spring是干什么的？" class="headerlink" title="2.Spring是干什么的？"></a>2.Spring是干什么的？</h4><ul>
<li>方便解耦，简化开发；</li>
<li>方便的对程序进行拦截、运行、监控等功能；</li>
<li>可以对事务声明；</li>
<li>属于一个万能的框架，方便集成各种优秀框架；</li>
<li>降低 Java EE API 的使用难度<br>   （Spring 对 Java EE 开发中非常难用的一些 API（JDBC、JavaMail、远程调用等）都提供了封装，使这些 API 应用的难度大大降低）</li>
<li>方便程序的测试</li>
</ul>
<h4 id="3-Spring怎么用？"><a href="#3-Spring怎么用？" class="headerlink" title="3.Spring怎么用？"></a>3.Spring怎么用？</h4><p>  这里我就不概述了，具体怎么用可以去百度、查API</p>
<hr>
<h3 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a><strong>SpringMVC</strong></h3><h4 id="1-SpringMVC是什么？"><a href="#1-SpringMVC是什么？" class="headerlink" title="1.SpringMVC是什么？"></a>1.SpringMVC是什么？</h4><ul>
<li><p>可以将SpringMVC看成Spring的一个组件</p>
</li>
<li><p>Spring MVC 是 Spring 提供的一个基于 MVC 设计模式的轻量级 Web 开发框架，本质上相当于 Servlet。<br>Spring MVC 角色划分清晰，分工明细，并且和 Spring 框架无缝结合。Spring MVC 是当今业界最主流的 Web 开发框架，以及最热门的开发技能。在 Spring MVC 框架中，Controller 替换 Servlet 来担负控制器的职责，用于接收请求，调用相应的 Model 进行处理，处理器完成业务处理后返回处理结果。Controller 调用相应的 View 并对处理结果进行视图渲染，最终客户端得到响应信息。</p>
</li>
<li><p>Spring MVC 框架采用松耦合可插拔的组件结构，具有高度可配置性，比起其它 MVC 框架更具有扩展性和灵活性。<br>此外，Spring MVC 的注解驱动和对 REST 风格的支持，也是它最具特色的功能。无论是在框架设计，还是扩展性、灵活性等方面都全面超越了 Struts2 等 MVC 框架。并且由于 Spring MVC 本身就是 Spring 框架的一部分，所以可以说与 Spring 框架是无缝集成，性能方面具有先天的优越性，对于开发者来说，开发效率也高于其它的 Web 框架，在企业中的应用越来越广泛，成为主流的 MVC 框架。</p>
</li>
<li><p>SpringMVC的优点</p>
<ul>
<li>清晰地角色划分，Spring MVC在Model、View和Controller方面提供了一个非常清晰的角色划分，这3个方面真正是各司其职，各负其责。</li>
<li>灵活的配置功能，可以把类当作 Bean 通过 XML 进行配置。</li>
<li>提供了大量的控制器接口和实现类，开发者可以使用 Spring 提供的控制器实现类，也可以自己实现控制器接口。</li>
<li>真正做到与 View 层的实现无关。它不会强制开发者使用 JSP，可以根据项目需求使用 Velocity、FreeMarker 等技术。</li>
<li>国际化支持</li>
<li>面向接口编程</li>
<li>与 Spring 框架无缝集成</li>
</ul>
</li>
<li><p>流程图<br><img src="/img/springmvc%E7%9A%84%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="SpringMVC流程图"></p>
</li>
</ul>
<hr>
<h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a><strong>MyBatis</strong></h3><h4 id="1-MyBatis是什么？"><a href="#1-MyBatis是什么？" class="headerlink" title="1.MyBatis是什么？"></a>1.MyBatis是什么？</h4><ul>
<li>MyBatis是一款优秀的持久层框架</li>
<li>它支持定制化SQL、存储过程以及高级映射。</li>
<li>Mybatis避免了几乎所有的JDBC代码和手动设置参数以及获取结果集。</li>
<li>Mybatis可以使用简单的XML或注解来配置和映射原生类型、接口和Java的POJO(Plain Old Java Object普通老式Java对象)为数据库中的记录。</li>
</ul>
<h4 id="小小的扩展几个点"><a href="#小小的扩展几个点" class="headerlink" title="小小的扩展几个点"></a>小小的扩展几个点</h4><h4 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h4><p>持久化是将程序数据在持久状态和瞬时状态间转换的机制</p>
<ul>
<li>即把数据（如内存中的对象）保存到可永久保存的存储设备中（如磁盘）。持久化的主要应用是将内存中的对象存储在数据库中，或者存储在磁盘文件中、XML数据文件中等等。</li>
<li>JDBC就是一种持久化机制。文件IO也是一种持久化机制。</li>
<li>在生活中 : 将鲜肉冷藏，吃的时候再解冻的方法也是。将水果做成罐头的方法也是。</li>
</ul>
<p>  为什么需要持久化服务呢？那是由于内存本身的缺陷引起的</p>
<ul>
<li>内存断电后数据会丢失，但有一些对象是无论如何都不能丢失的，比如银行账号等，遗憾的是，人们还无法保证内存永不掉电。</li>
<li>内存过于昂贵，与硬盘、光盘等外存相比，内存的价格要高2~3个数量级，而且维持成本也高，至少需要一直供电吧。所以即使对象不需要永久保 存，也会因为内存的容量限制不能一直呆在内存中，需要持久化来缓存到外存。</li>
</ul>
<h4 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h4><ul>
<li>完成持久化工作的代码块 . ——&gt; dao层 【DAO (Data Access Object) 数据访问对象】</li>
<li>大多数情况下特别是企业级应用，数据持久化往往也就意味着将内存中的数据保存到磁盘上加以固化，而持久化的实现过程则大多通过各种关系数据库来完成。</li>
<li>不过这里有一个字需要特别强调，也就是所谓的“层”。对于应用系统而言，数据持久功能大多是必不可少的组成部分。也就是说，我们的系统中，已经天然的具备了“持久层”概念？也许是，但也许实际情况并非如此。之所以要独立出一个“持久层”的概念,而不是“持久模块”，“持久单元”，也就意味着，我们的系统架构中，应该有一个相对独立的逻辑层面，专注于数据持久化逻辑的实现.</li>
<li>与系统其他部分相对而言，这个层面应该具有一个较为清晰和严格的逻辑边界。【说白了就是用来操作数据库存在的！】</li>
</ul>
<h4 id="2-为什么需要MyBatis？"><a href="#2-为什么需要MyBatis？" class="headerlink" title="2.为什么需要MyBatis？"></a>2.为什么需要MyBatis？</h4><ul>
<li><p>Mybatis就是帮助程序猿将数据存入数据库中 , 和从数据库中取数据 .</p>
</li>
<li><p>传统的jdbc操作 , 有很多重复代码块 .比如 : 数据取出时的封装 , 数据库的建立连接等等… , 通过框架可以减少重复代码,提高开发效率 .</p>
</li>
<li><p>MyBatis 是一个半自动化的ORM框架 (Object Relationship Mapping) —&gt;对象关系映射</p>
</li>
<li><p>所有的事情，不用Mybatis依旧可以做到，只是用了它，所有实现会更加简单！技术没有高低之分，只有使用这个技术的人有高低之别</p>
</li>
<li><p>MyBatis的优点</p>
<ul>
<li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件就可以了，易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li>
<li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li>
<li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li>
<li>提供xml标签，支持编写动态sql。</li>
</ul>
</li>
</ul>
<hr>
<h3 id="简单了解后我们就大概了解了什么是SSM"><a href="#简单了解后我们就大概了解了什么是SSM" class="headerlink" title="简单了解后我们就大概了解了什么是SSM"></a>简单了解后我们就大概了解了什么是SSM</h3><ul>
<li><p>SSM 框架业务执行流程图<br>  <img src="/img/f4496bb80bd34ec990f641ea78111e2f.png" alt="SpringMVC流程图"></p>
</li>
<li><p>SSM程序流程</p>
<p> 1.整个SSM框架使用maven依赖管理和构建，将其打包成war包，部署到服务器将其运行。使用spring boot框架也可以打包成jar包部署。<br> 2.SSM项目一般分为前端和后端两个部分，前端页面UI界面用bootstrap和jsp或者现在流行的vue等技术实现，后台则由SSM框架来搭建和编写，前后端交互部分则由ajax俩发送请求来处理。<br> 3.springMVC控制器，用于页面的跳转请求和对具体的视图解析，而处理不了的请求则交给tomcat服务器来处理。<br> 4.编写对应的Mappper接口以及Mapper文件，将其扫描进spring的ioc容器中，再由mybatis将对数据库的增删改查。<br> 5.在spring容器中，有三层架构–&gt;Controller，Service，Dao层，分别处理不同的事务逻辑<br> 6.有前端发送ajax请求给springMVC，后springMVC将其数据解析成json数据返回给前端页面，在前端用js解析成json在前端显示。<br> 7.增删改查操作都是有ajax请求来处理。<br> 8.具体的流程图由下图所示：</p>
<ul>
<li>spring将各层进行整合</li>
<li>通过spring管理持久层的mapper（dao接口）</li>
<li>通过spring管理业务层service，service中可以调用mapper接口 spring进行事物管理</li>
<li>通过spring管理表现层Handle，Handle中可以调用service接口。</li>
<li>mapper、service、Handle都是javabean<br>  <img src="/img/8c0f04f75a1d4540b517fef193899f1d.png" alt="SpringMVC流程图"></li>
</ul>
</li>
</ul>
<p>以上就是编程小白关于SSM的总结了 不过是参考百度、csdn大佬的文章,大家参考参考就好了~</p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue小总结</title>
    <url>/2022/11/12/Vue%E5%B0%8F%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="初学Vue小总结-记录-以便复习"><a href="#初学Vue小总结-记录-以便复习" class="headerlink" title="初学Vue小总结(记录 以便复习)"></a>初学Vue小总结(记录 以便复习)</h1><hr>
<h3 id="第一部分-vue基础-基本指令"><a href="#第一部分-vue基础-基本指令" class="headerlink" title="第一部分 (vue基础_基本指令)"></a>第一部分 (vue基础_基本指令)</h3><h4 id="vue是什么？"><a href="#vue是什么？" class="headerlink" title="vue是什么？"></a>vue是什么？</h4><ul>
<li>Vue.js是一款流行的JavaScript前端框架，旨在更好地组织与简化Web开发。</li>
</ul>
<h4 id="为什么要学习vue"><a href="#为什么要学习vue" class="headerlink" title="为什么要学习vue?"></a>为什么要学习vue?</h4><ul>
<li><p>随着项目业务场景的复杂,传统模式（html+jquery）已无法满足需求就出现了Angular&#x2F;React&#x2F;Vue等框架</p>
</li>
<li><p>主流框架之一(React Angular Vue)： React和Vue玩的最好的一手就是”数据的双向绑定”</p>
</li>
<li><p>易用、灵活、高效： 与jQuery请求拼字符串相比，Vue直接一个json串搞定</p>
</li>
</ul>
<h5 id="库和框架的区别"><a href="#库和框架的区别" class="headerlink" title="库和框架的区别"></a>库和框架的区别</h5><ul>
<li><p>库(如jQuery)</p>
<p>库是一系列函数的集合. 提供大量API，体现了封装的思想、我们想要实现某个功能，需要自己调用这些API的方法（.css()、.style().color）</p>
<p><strong>特点：开发人员说了算。</strong></p>
</li>
<li><p>框架</p>
<p>框架提供了一套完整解决方案,它指定了一套规则，我们要使用这个框架，就要按照他们的规则去编写代码，编写好了之后，框架会在适当的时机去解析我们的代码</p>
<p><strong>特点：框架说了算。</strong></p>
</li>
</ul>
<ul>
<li>区别：控制反转(谁说了算，谁起主导作用)</li>
</ul>
<h4 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h4><blockquote>
<p>Vue 使用的是 MVVM 模式<br>为什么要学习 MVVM ?</p>
</blockquote>
<ul>
<li>MVVM &#x3D;&#x3D;&#x3D;&gt; M &#x2F; V &#x2F; VM</li>
<li>M : model 数据层</li>
<li>V : view 视图层</li>
<li>VM : ViewModel 视图模型</li>
<li>核心 : V&lt;&#x3D;&#x3D;&#x3D;&gt; VM &lt;&#x3D;&#x3D;&#x3D;&gt; M<br><img src="/img/mvvm.png" alt="如图"></li>
</ul>
<p>说明：</p>
<p>将从M层获取的msg：123填充到V层，大牛3行代码，小牛30行，小白300行，性能肯定是不一样的</p>
<p>而现在，不管大牛小牛小白，学了Vue之后，利用MVVM它来帮你做，达到性能统一</p>
<p>M：数据层，还是Model</p>
<p>V：视图层，还是View</p>
<p>VM（原来的C层）:ViewModel层 视图数据层（vm）,其实就是Vue的实例（官网中Vue vm &#x3D; new Vue()）</p>
<p>数据的双向绑定：单向更改，双向绑定</p>
<h4 id="略…"><a href="#略…" class="headerlink" title="略…."></a>略….</h4><hr>
<h4 id="Vue入门"><a href="#Vue入门" class="headerlink" title="Vue入门"></a>Vue入门</h4><ul>
<li>vue的基本使用<br>引入vue.js后:</li>
</ul>
<p><img src="/img/%E5%85%A5%E9%97%A81.png" alt="如图"></p>
<ul>
<li><h5 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h5></li>
</ul>
<ul>
<li><p>el</p>
<p>el作用:指定当前Vue实例所管理的视图,值通常是id选择器</p>
<ul>
<li><p>el的值可以是css选择器,通常是id选择器</p>
</li>
<li><p>el的值不能是html标签和body标签</p>
</li>
</ul>
</li>
<li><p>data</p>
<p>data作用:指定当前Vue实例的数据对象</p>
<ul>
<li><p>data中的数据是响应式数据</p>
</li>
<li><p>值是一个对象 {属性: 值}</p>
</li>
<li><p>所有数据部分写在data中</p>
</li>
<li><p>在当前Vue实例所管理的视图中通过属性名使用data中的数据</p>
</li>
<li><p>可以通过vm.$data.属性 访问数据</p>
</li>
<li><p>可以通过vm.属性 访问数据(更简单)</p>
</li>
</ul>
</li>
<li><p>methods</p>
<p>methods作用:指定当前Vue实例中的方法</p>
<ul>
<li><p>可以直接通过vm实例访问这些方法，</p>
</li>
<li><p>方法中的 this 自动绑定为 Vue 实例</p>
</li>
</ul>
</li>
</ul>
<ul>
<li><h5 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h5></li>
</ul>
<ol>
<li>解释：使用<code>&#123;&#123;&#125;&#125;</code>（插值表达式）从<code>data</code>中获取数据，并展示在模板中</li>
<li>说明：<code>&#123;&#123;&#125;&#125;</code>中只能出现JavaScript表达式</li>
<li>说明：数据对象的属性值发生了改变，插值处的内容都会更新</li>
</ol>
<ul>
<li>表达式 
  - 运算符 : {{  msg + 500}}
  - 调用方法 : {{ [14,7].join('-') }}
  - 三元 :  {{  true ? '真':''假 }}
</li>
<li>不能使用语句 if语句 for语句</li>
</ul>
<h5 id="代码块演示"><a href="#代码块演示" class="headerlink" title="代码块演示"></a>代码块演示</h5><p><img src="/img/%E5%85%A5%E9%97%A82.png" alt="代码演示1"><br><img src="/img/%E5%85%A5%E9%97%A83.png" alt="代码演示2"></p>
<h4 id="vue常用指令"><a href="#vue常用指令" class="headerlink" title="vue常用指令"></a>vue常用指令</h4><blockquote>
<p>v-text和v-html</p>
</blockquote>
<ul>
<li>v-text:更新标签中的内容<ul>
<li>v-text和插值表达式的区别<ul>
<li>v-text  更新整个标签中的内容</li>
<li>插值表达式: 更新标签中局部的内容</li>
</ul>
</li>
</ul>
</li>
<li>v-html:更新标签中的内容&#x2F;标签<ul>
<li>可以渲染内容中的HTML标签</li>
<li>注意:尽量避免使用，容易造成危险 (XSS跨站脚本攻击)</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置vue所管理的视图 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 获取Vue对象中data里的数据 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;text&#125;&#125;,我是p标签中的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;text&quot;</span>&gt;</span>我是p标签中的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;html&quot;</span>&gt;</span>我是p标签中的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;text&quot;</span>&gt;</span>我是p标签中的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;html&quot;</span>&gt;</span>我是p标签中的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 引入Vue.js文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建Vue对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">text</span>:<span class="string">&#x27;点我试试看&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">html</span>:<span class="string">&#x27;&lt;a href=&quot;http://www.itcast.cn&quot;&gt;试试就试试&lt;/a&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>v-if和v-show<br>作用:根据表达式的bool值进行判断是否渲染该元素</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 设置vue所管理的视图 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 获取vue对象中data里的数据 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>我是v-if数据<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>我是v-show数据<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue.js --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 创建Vue对象 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">isShow</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;);</span></span><br><span class="line"><span class="language-javascript">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h5><p><code>v-if</code> 有更高的切换开销，而 <code>v-show</code> 有更高的初始渲染开销。</p>
<p>因此，如果需要非常频繁地切换，则使用 <code>v-show</code> 较好；</p>
<p>如果在运行时条件很少改变，则使用 <code>v-if</code> 较好。</p>
<blockquote>
<p>v-on</p>
</blockquote>
<ul>
<li><p>作用:使用 <code>v-on</code> 指令绑定 DOM 事件，并在事件被触发时执行一些 JavaScript 代码。</p>
</li>
<li><p>语法:  </p>
<ul>
<li><code>v-on:事件名.修饰符 = &quot;methods中的方法名&quot;  </code>; v-on的简写方法: <code>@事件名.修饰符 = &quot;methods中的方法名&quot;</code></li>
</ul>
</li>
<li><p>修饰符<br><img src="/img/1563798242894.png" alt="v-if和v-show"></p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:v-on</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;location.href=&#x27;http://www.baidu.com&#x27;&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;method1()&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--需求: 点击按钮 修改 点击次数--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--在事件内 直接书写js代码--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--1 原始方式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>按钮1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--2 简化方式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>按钮2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--3 给事件绑定方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fn1()&quot;</span>&gt;</span>按钮3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--4 给事件绑定方法, 还要给方法传递参数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fn2(count)&quot;</span>&gt;</span>按钮4<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--5 限制点击事件只会被执行一次--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fn3()&quot;</span>&gt;</span>按钮5<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fn3&quot;</span>&gt;</span>按钮52222222<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;fn3()&quot;</span>&gt;</span>按钮6<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>上面的按钮被点击的次数: &#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            el : <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            data : &#123;</span></span><br><span class="line"><span class="language-javascript">                count : <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            methods : &#123;</span></span><br><span class="line"><span class="language-javascript">                fn1 : <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;方法一 被调用了... ...&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">count</span>++;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                fn2 : <span class="keyword">function</span>(<span class="params">cou</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;按钮被点击的次数: &quot;</span> + cou);</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                fn3 : <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;方法三 被调用了... ...&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>v-for<br>v-for作用: 列表渲染,当遇到相似的标签结构时,就用v-for去渲染</p>
</blockquote>
<ul>
<li><p>格式</p>
  <figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">(item,index)</span> <span class="string">in 数组</span></span><br><span class="line"><span class="attr">参数item</span>:<span class="string">数组中的每个元素</span></span><br><span class="line"><span class="attr">参数index</span>:<span class="string">数组中元素的下标</span></span><br></pre></td></tr></table></figure>

  <figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">(value,</span> <span class="string">key, index) in 对象</span></span><br><span class="line"><span class="attr">参数index</span>:<span class="string">对象中每对key-value的索引 从0开始</span></span><br><span class="line"><span class="attr">参数key</span>:<span class="string">键	</span></span><br><span class="line"><span class="attr">参数value</span>:<span class="string">值</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--获取vue中data里面的数据--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--遍历数组--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in arr&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125; ===== &#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--遍历对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, key, index) in person&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125; ==== &#123;&#123;key&#125;&#125; ==== &#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--遍历对象数组--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(person, index) in personArr&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125; ===== &#123;&#123;person.name&#125;&#125; ==== &#123;&#123;person.age&#125;&#125; ===== &#123;&#123;person.gender&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        el : <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        data : &#123;</span></span><br><span class="line"><span class="language-javascript">            arr : [<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">            person : &#123;<span class="attr">name</span>:<span class="string">&quot;刘备&quot;</span>, <span class="attr">age</span>:<span class="string">&quot;25&quot;</span>, <span class="attr">gender</span>:<span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">            personArr : [</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;刘备&quot;</span>, <span class="attr">age</span>:<span class="string">&quot;25&quot;</span>, <span class="attr">gender</span>:<span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;关羽&quot;</span>, <span class="attr">age</span>:<span class="string">&quot;28&quot;</span>, <span class="attr">gender</span>:<span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;张飞&quot;</span>, <span class="attr">age</span>:<span class="string">&quot;29&quot;</span>, <span class="attr">gender</span>:<span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>v-bind<br><strong>作用:</strong> 可以绑定标签上的任何属性。<br>格式:</p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">v-bind</span>:<span class="string">属性=&quot;值&quot;</span></span><br></pre></td></tr></table></figure>

<p>简写格式</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line">:<span class="attr">属性</span>=<span class="string">&quot;值&quot;</span></span><br></pre></td></tr></table></figure>

<p>属性值一部分进行替换的格式</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line">:<span class="attr">属性</span>=<span class="string">&quot;&#x27;常亮值&#x27; + vue对象data中的数据&quot;</span></span><br></pre></td></tr></table></figure>

<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:v-bind</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-bind<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;5&quot;</span> <span class="attr">v-bind:color</span>=<span class="string">&quot;ys1&quot;</span>&gt;</span>传智播客<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;5&quot;</span> <span class="attr">:color</span>=<span class="string">&quot;ys2&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.itcast.cn&quot;</span>&gt;</span>itcast<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;&#x27;http://&#x27; + url&quot;</span>&gt;</span>京东<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">ys1</span>:<span class="string">&quot;red&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">ys2</span>:<span class="string">&quot;yellow&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>:<span class="string">&quot;www.jd.cn&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>v-model<br><strong>作用:</strong> 表单元素的绑定</p>
</blockquote>
<p>特点: <strong>双向数据绑定</strong></p>
<ul>
<li>vue对象中的数据发生变化可以更新到界面</li>
<li>通过界面可以更改vue对象中数据</li>
<li><code>v-model</code> 会忽略所有表单元素的 <code>value</code>、<code>checked</code>、<code>selected</code> 特性的初始值而总是将 Vue 实例的数据作为数据来源。应该在 <code>data</code>选项中声明初始值。</li>
</ul>
<p>格式:</p>
<p>​	在表单控件或者组件上创建双向绑定。细节请看下面的代码演示。</p>
<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-model<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;user.username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;user.password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;fun&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;fun2()&quot;</span> <span class="attr">value</span>=<span class="string">&quot;修改&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//表示当前vue对象接管了div区域</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//设置初始值</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">user</span>:&#123;<span class="attr">username</span>:<span class="string">&quot;zhangsan&quot;</span>,<span class="attr">password</span>:<span class="string">&quot;123&quot;</span>&#125; ,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fun</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取界面输入后,更新的值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">username</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">password</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fun2</span>:<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//对数据的值 再次赋值进行更新</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">username</span> = <span class="string">&quot;武松&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">password</span> = <span class="string">&quot;555555555&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="第二部分-生命周期"><a href="#第二部分-生命周期" class="headerlink" title="第二部分 (生命周期)"></a>第二部分 (生命周期)</h3>]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
